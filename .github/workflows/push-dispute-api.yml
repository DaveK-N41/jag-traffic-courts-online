name: Build .NET API Image and Push to Openshift Registry
on:
  push:
    branches: [main]
  workflow_dispatch:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      VERSION: v1
      IMAGE_NAME: dispute-api
      IMAGE_TAGS: latest

    steps:
      - uses: actions/checkout@v2

      - name: Cluster Login
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT_SA_PASSWORD }}"}'
          cmd: |
            'version'

      - name: Build the container image
        id: build-image
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
        run: |          
          docker-compose build ${{ env.IMAGE_NAME }}
          docker tag jag-traffic-courts-online_${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAGS }}
          docker tag jag-traffic-courts-online_${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker tag jag-traffic-courts-online_${{ env.IMAGE_NAME }} ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          docker login ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }} -u ${{ secrets.OPENSHIFT_SA_USERNAME }} -p ${{ secrets.OPENSHIFT_SA_PASSWORD }}
          echo "docker push ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAGS }}"
          docker push ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAGS }}
      - name: Push To Registry
        uses: redhat-actions/push-to-registry@v2.1.1
        with:
          image: ${{ env.IMAGE_NAME }}
          registry: '${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}'
          username: '${{ secrets.OPENSHIFT_SA_USERNAME }}'
          password: '${{ secrets.OPENSHIFT_SA_PASSWORD }}'
          tags: ${{ env.IMAGE_TAGS }}
