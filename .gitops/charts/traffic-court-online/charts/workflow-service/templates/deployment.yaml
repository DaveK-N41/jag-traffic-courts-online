apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "workflow-service.fullname" . }}
  labels:
    app.openshift.io/runtime: dotnet
    {{- include "workflow-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "workflow-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "9090"
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-token: 'true'
        vault.hashicorp.com/auth-path: auth/k8s-silver
        vault.hashicorp.com/namespace: platform-services
        vault.hashicorp.com/role: {{ .Values.global.vault.role }}  # licenseplate-nonprod or licenseplate-prod are your options
        vault.hashicorp.com/agent-inject-secret-secrets.env: {{ .Values.global.vault.role }}/{{ .Values.global.vault.path }}workflow-service
        vault.hashicorp.com/agent-inject-template-secrets.env: |
          {{`{{- with secret `}}"{{ .Values.global.vault.role }}/{{ .Values.global.vault.path }}workflow-service"{{` }}
          {{- range $k, $v := .Data.data }}
          {{ $k }}={{ $v }}{{ end -}}
          {{- end `}} }}
      labels:
        {{- include "workflow-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.global.licenseplate }}-vault
      containers:
        - env:
          {{- $env := merge (.Values.env | default dict) (.Values.global.env | default dict) -}}
          {{ range $k, $v := $env }}
          - name: {{ $k | quote }}
            value: {{ $v | quote }}
          {{- end }}
          - name: TZ
            value: America/Vancouver
          - name: OracleDataApi__BaseUrl
            value: http://{{ .Release.Name }}-oracle-data-api.{{ .Values.global.namespace }}.svc.cluster.local:8080
          - name: ArcApiConfiguration__Host
            value: {{ .Release.Name }}-arc-dispute-api.{{ .Values.global.namespace }}.svc.cluster.local
          - name: ArcApiConfiguration__Port
            value: "8080"
          - name: ASPNETCORE_URLS
            value: http://*:8080;http://*:9090
          - name: COMS__USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.coms.service.secretName }}
                key: username
          - name: COMS__PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.coms.service.secretName }}
                key: password
          - name: COMS_DB_HOST
            value: {{ .Values.coms.host }}
          - name: COMS_DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: {{ .Values.coms.db.secretName }}
                key: app-db-name
          - name: COMS_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.coms.db.secretName }}
                key: app-db-password
          - name: COMS_DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.coms.db.secretName }}
                key: app-db-username
          name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
