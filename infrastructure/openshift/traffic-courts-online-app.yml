apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: traffic-courts-citizen-portal
  description: Deployment template for the Traffic Courts Citizen Portal App
parameters:
- name: APP_NAME
  description: The application name that each component is part of
  required: true
  value: citizen-portal
- name: OC_NAMESPACE
  description: The OpenShift namespace prefix
  required: true
  value: 0198bb
- name: OC_ENV
  description: The OpenShift environment, ie dev, test or prod
  required: true
- name: FRONTEND_POD
  description: The name used to create the DC 
  required: true
  value: citizen-web
- name: FRONTEND_URL
  description: The route prefix. Combined with the OC_NAMESPACE, OC_ENV and URL_STUB to build the url
  required: true
- name: URL_STUB
  description: The route suffix. Used to build the route 
  value: ".apps.silver.devops.gov.bc.ca"
  required: false
objects:

### Frontend ###
### Citizen Portal Deployment Configs ###
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  namespace: ${OC_NAMESPACE}-${OC_ENV}
  metadata:
    name: ${FRONTEND_POD}
    namespace: ${OC_NAMESPACE}-${OC_ENV}
    labels:
      app.kubernetes.io/part-of: ${APP_NAME}
  spec:
    completionDeadlineSeconds: 1200
    replicas: 1
    selector:
      name: ${FRONTEND_POD}
    strategy:
      type: Recreate
      maxSurge: 50%
      maxUnavailable: 0
    template:
      metadata:
        labels:
          dev-app: ${APP_NAME}
          name: ${FRONTEND_POD}
      spec:
        containers:
          - image: >-
              image-registry.openshift-image-registry.svc:5000/${OC_NAMESPACE}-tools/citizen-web:${OC_ENV}
            name: ${FRONTEND_POD} 
            ports:
              - containerPort: 8080
            resources:
              limits:
                cpu: 10m
                memory: 64Mi
              requests:
                cpu: 10m
                memory: 64Mi
              livenessProbe:
                httpGet:
                  path: "/nginx_status"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: "/nginx_status"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
            volumeMounts:
            - name: configuration-volume
              mountPath: /usr/share/nginx/html/assets/app.config.json
              subPath: app.config.json
        volumes:
          - name: configuration-volume
            configMap:
              name: citizen-web-configuration
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${FRONTEND_POD}
          from:
            kind: ImageStreamTag
            namespace: "${OC_NAMESPACE}-tools"
            name: 'citizen-web:${OC_ENV}'
  status: {}
### Citizen Portal Service ###
- apiVersion: v1
  kind: Service
  namespace: ${OC_NAMESPACE}-${OC_ENV}
  labels:
    app: ${FRONTEND_POD}
    app.kubernetes.io/component: ${APP_NAME}
    app.kubernetes.io/instance: ${APP_NAME}
    app.kubernetes.io/part-of: ${APP_NAME}
  metadata:
    name: ${FRONTEND_POD}
    namespace: ${OC_NAMESPACE}-${OC_ENV}
    labels:
      app.kubernetes.io/part-of: ${APP_NAME}
  spec:
    ports:
      - name: "http"
        port: 80
        targetPort: 8080
    selector:
      name: ${FRONTEND_POD}
### Citizen Portal Routes ###
- apiVersion: route.openshift.io/v1
  kind: Route
  namespace: ${OC_NAMESPACE}-${OC_ENV}
  labels:
    app: ${FRONTEND_POD}
    app.kubernetes.io/component: ${APP_NAME}
    app.kubernetes.io/instance: ${APP_NAME}
    app.kubernetes.io/part-of: ${APP_NAME}
  metadata:
    name: ${FRONTEND_POD}
    namespace: ${OC_NAMESPACE}-${OC_ENV}
  spec:
    host: ${FRONTEND_URL}-${OC_NAMESPACE}-${OC_ENV}${URL_STUB}
    to:
      kind: Service
      name: ${FRONTEND_POD}
      weight: 100
    port:
      targetPort: http
    tls:
      termination: edge
    wildcardPolicy: None
