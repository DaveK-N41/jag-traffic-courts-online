{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:5010",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1.0/dispute/{id}": {
      "get": {
        "tags": [ "dispute-controller" ],
        "operationId": "getDispute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Not Found",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/Dispute" } } }
          }
        }
      },
      "put": {
        "tags": [ "dispute-controller" ],
        "summary": "Updates the properties of a particular Dispute record based on the given values.",
        "operationId": "updateDispute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Dispute" } } },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": {
            "description": "Ok",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/Dispute" } } }
          }
        }
      },
      "delete": {
        "tags": [ "dispute-controller" ],
        "operationId": "deleteDispute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Not Found",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": { "description": "OK" }
        }
      }
    },
    "/api/v1.0/dispute/{id}/submit": {
      "put": {
        "tags": [ "dispute-controller" ],
        "summary": "Updates the status of a particular Dispute record to PROCESSING.",
        "operationId": "submitDispute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "A Dispute status can only be set to PROCESSING iff status is NEW or PROCESSING. Update failed.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": {
            "description": "Ok. Updated Dispute record returned.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/Dispute" } } }
          }
        }
      }
    },
    "/api/v1.0/dispute/{id}/reject": {
      "put": {
        "tags": [ "dispute-controller" ],
        "summary": "Updates the status of a particular Dispute record to REJECTED.",
        "operationId": "rejectDispute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "A Dispute status can only be set to REJECTED iff status is NEW, CANCELLED, or REJECTED and the rejected reason must be <= 256 characters. Update failed.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": {
            "description": "Ok. Updated Dispute record returned.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/Dispute" } } }
          }
        }
      }
    },
    "/api/v1.0/dispute/{id}/cancel": {
      "put": {
        "tags": [ "dispute-controller" ],
        "summary": "Updates the status of a particular Dispute record to CANCELLED.",
        "operationId": "cancelDispute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "A Dispute status can only be set to CANCELLED iff status is REJECTED or PROCESSING. Update failed.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": {
            "description": "Ok. Updated Dispute record returned.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/Dispute" } } }
          }
        }
      }
    },
    "/api/v1.0/dispute": {
      "post": {
        "tags": [ "dispute-controller" ],
        "operationId": "saveDispute",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Dispute" } } },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Not Found",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/disputes": {
      "get": {
        "tags": [ "dispute-controller" ],
        "operationId": "getAllDisputes",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Not Found",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Dispute" }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/codetable/refresh": {
      "get": {
        "tags": [ "dispute-controller" ],
        "summary": "An endpoint hook to trigger a redis rebuild of cached codetable data.",
        "description": "The codetables in redis are cached copies of data pulled from Oracle to ensure TCO remains stable. This data is periodically refreshed, but can be forced by hitting this endpoint.",
        "operationId": "codeTableRefresh",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "Not Found",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": { "description": "OK" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Dispute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [ "NEW", "PROCESSING", "REJECTED", "CANCELLED" ]
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "provincialCourtHearingLocation": {
            "type": "string",
            "nullable": true
          },
          "issuedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "citizenSubmittedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "givenNames": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "homePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "workPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "filingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disputedCounts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DisputedCount" }
          },
          "representedByLawyer": { "type": "boolean" },
          "legalRepresentation": { "$ref": "#/components/schemas/LegalRepresentation" },
          "interpreterLanguage": {
            "type": "string",
            "nullable": true
          },
          "numberOfWitness": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fineReductionReason": {
            "type": "string",
            "nullable": true
          },
          "timeToPayReason": {
            "type": "string",
            "nullable": true
          },
          "rejectedReason": {
            "type": "string",
            "nullable": true
          },
          "citizenDetectedOcrIssues": { "type": "boolean" },
          "systemDetectedOcrIssues": { "type": "boolean" },
          "jjAssigned": {
            "type": "string",
            "nullable": true
          },
          "violationTicket": { "$ref": "#/components/schemas/ViolationTicket" }
        }
      },
      "DisputedCount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "readOnly": true
          },
          "plea": {
            "type": "string",
            "enum": [ "GUILTY", "NOT_GUILTY" ]
          },
          "count": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "requestTimeToPay": { "type": "boolean" },
          "requestReduction": { "type": "boolean" },
          "appearInCourt": { "type": "boolean" }
        }
      },
      "LegalRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "readOnly": true
          },
          "lawFirmName": { "type": "string" },
          "lawyerName": { "type": "string" },
          "lawyerSurname": { "type": "string" },
          "lawyerEmail": { "type": "string" },
          "lawyerAddress": { "type": "string" }
        },
        "nullable": true
      },
      "ViolationTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "readOnly": true
          },
          "ocrViolationTicket": {
            "type": "string",
            "nullable": true
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "givenNames": {
            "type": "string",
            "nullable": true
          },
          "isYoungPerson": {
            "type": "boolean",
            "nullable": true
          },
          "driversLicenceNumber": {
            "type": "string",
            "nullable": true
          },
          "driversLicenceProvince": {
            "type": "string",
            "nullable": true
          },
          "driversLicenceProducedYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "driversLicenceExpiryYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "isChangeOfAddress": {
            "type": "boolean",
            "nullable": true
          },
          "isDriver": {
            "type": "boolean",
            "nullable": true
          },
          "isCyclist": {
            "type": "boolean",
            "nullable": true
          },
          "isOwner": {
            "type": "boolean",
            "nullable": true
          },
          "isPedestrian": {
            "type": "boolean",
            "nullable": true
          },
          "isPassenger": {
            "type": "boolean",
            "nullable": true
          },
          "isOther": {
            "type": "boolean",
            "nullable": true
          },
          "otherDescription": {
            "type": "string",
            "nullable": true
          },
          "issuedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "issuedOnRoadOrHighway": {
            "type": "string",
            "nullable": true
          },
          "issuedAtOrNearCity": {
            "type": "string",
            "nullable": true
          },
          "isMvaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isWlaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isLcaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isMcaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isFaaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isTcrOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isCtaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isOtherOffence": {
            "type": "boolean",
            "nullable": true
          },
          "otherOffenceDescription": {
            "type": "string",
            "nullable": true
          },
          "enforcementOrganization": {
            "type": "string",
            "nullable": true
          },
          "violationTicketCounts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ViolationTicketCount" }
          }
        },
        "nullable": true
      },
      "ViolationTicketCount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "readOnly": true
          },
          "count": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "actOrRegulation": {
            "type": "string",
            "nullable": true
          },
          "fullSection": {
            "type": "string",
            "nullable": true
          },
          "section": {
            "type": "string",
            "nullable": true
          },
          "subsection": {
            "type": "string",
            "nullable": true
          },
          "paragraph": {
            "type": "string",
            "nullable": true
          },
          "act": {
            "type": "string",
            "nullable": true
          },
          "ticketedAmount": {
            "type": "number",
            "format": "double"
          },
          "isAct": {
            "type": "boolean",
            "nullable": true
          },
          "isRegulation": {
            "type": "boolean",
            "nullable": true
          }
        }
      }
    }
  }
}