version: "3.8"

services:
  # #############################################################################################
  # ###                                 TrafficCourt BACKEND                                  ###
  # #############################################################################################

  # ---------------------------------------------------------------------------------------------
  # Citizen API
  # ---------------------------------------------------------------------------------------------
  citizen-api:
    container_name: citizen-api
    build:
      context: ./src/backend/TrafficCourts
      dockerfile: ./Citizen.Service/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ASPNETCORE_URLS: http://*:8080
      FORMRECOGNIZER__APIKEY: ${FORMRECOGNIZER__APIKEY:-}
      FORMRECOGNIZER__ENDPOINT: ${FORMRECOGNIZER__ENDPOINT:-}
      MASSTRANSIT__TRANSPORT: ${MASSTRANSIT__TRANSPORT:-InMemory}
      RABBITMQ__HOST: rabbitmq
      RABBITMQ__PORT: 5672
      RABBITMQ__USERNAME: ${RABBITMQ__USERNAME}
      RABBITMQ__PASSWORD: ${RABBITMQ__PASSWORD}
      TICKETSEARCHCLIENT__ADDRESS: ${TICKETSEARCHCLIENT__ADDRESS:-http://ticket-search:8080/}
    ports:
      - "5000:8080"
    restart: always
    depends_on: [rabbitmq, ticket-search, seq]
    networks:
      - traffic-court-net
    volumes:
      # mount the current users usersecrets folder
      - "${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro"

  # ---------------------------------------------------------------------------------------------
  # Ticket Search API
  # ---------------------------------------------------------------------------------------------
  ticket-search:
    container_name: ticket-search
    build:
      context: ./src/backend/TrafficCourts
      dockerfile: ./TrafficCourts.Ticket.Search.Service/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ASPNETCORE_URLS: http://*:8080
      TICKETSEARCH__SEARCHTYPE: ${TICKETSEARCH__SEARCHTYPE:-Mock}
    ports:
      - "5100:8080"
      - "5110:8088"
    restart: always
    #depends_on: [splunk]
    networks:
      - traffic-court-net
    volumes:
      # mount the current users usersecrets folder
      - "${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro"

  #############################################################################################
  ###                           Oracle Interface API                                        ###
  #############################################################################################
  oraface-api:
    container_name: oraface-api
    build:
      context: ./src/backend/oracle-data-interface
      args:
        - SKIP_TESTS=true
        - ENABLE_SPLUNK=${ENABLE_SPLUNK:-false}
    ports:
      - "5010:8080"
    networks:
      - traffic-court-net

  # #############################################################################################
  # ###                                 TrafficCourt FRONTEND                                 ###
  # #############################################################################################
  citizen-portal:
    container_name: citizen-portal
    build:
      context: ./src/frontend/citizen-portal
      args:
        - API_BASE_PATH=${API_BASE_PATH:-http://citizen-api:8080/api/}
    restart: always
    ports:
      - "8080:8080"
    ## following is used for testing nginx.conf locally. No need to build the citizen-portal every
    ## time we change the nginx.conf, start a shell in the container and run 'service nginx reload' or '/etc/init.d/nginx reload'
    #volumes:
    #  - ./src/frontend/citizen-portal/nginx.conf:/opt/app-root/etc/nginx.default.d/default.conf
    depends_on: [citizen-api]
    networks:
      - traffic-court-net

  #############################################################################################
  ###                           RABBITMQ                                                    ###
  #############################################################################################
  rabbitmq:
    image: rabbitmq:3.9.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - data-rabbit:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    restart: always
    networks:
      - traffic-court-net

  #############################################################################################
  ###                           Seq                                                         ###
  #############################################################################################
  seq:
    image: datalust/seq:latest
    ports:
      - 5341:80
    environment:
      ACCEPT_EULA: Y
    restart: unless-stopped

# Note, this network def should be removed - it only adds to file bloat and not needed.
#   By default, Docker creates a single network (bridge) to be used by all containers, each 
#   accessible by the hostname (which defaults as the container_name).
networks:
  traffic-court-net:
    driver: "bridge"

volumes:
  data-rabbit:
  data-redis:
