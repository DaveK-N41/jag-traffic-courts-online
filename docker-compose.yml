version: "3.8"

services:
#############################################################################################
###                           TrafficCourt api backend app                                ###
#############################################################################################
  TrafficCourt-api:
    container_name: TrafficCourt-api
    hostname: TrafficCourt-api
    build:
      context: ./src/backend/TrafficCourtsApi
      args:
        - SERVICE_NAME=TrafficCourt-api
        - MVN_PROFILE=${MVN_PROFILE:-demo}
        - SKIP_TESTS=true
        - STARTERS_V=v0.1.8
    ports:
      - "8080:8080"
    environment:
      
    networks:
      - fisu-net
  
#############################################################################################
###                                 TrafficCourt FRONTEND                                 ###
#############################################################################################
  TrafficCourt-frontend:
    stdin_open: true
    container_name: TrafficCourt-frontend
    build:
      context: ./src/frontend/citizen-portal
      dockerfile: Dockerfile.legacy
      args:
        - SERVICE_NAME=TrafficCourt-frontend
    ports:
      - 3000:3000
    environment:

#############################################################################################
###                                 TrafficCourt DEMO                                     ###
#############################################################################################  
  TrafficCourt-demo:    
    stdin_open: true
    container_name: TrafficCourt-demo
    build:
      context: ./src/frontend/citizen-portal
      args:
        - SERVICE_NAME=TrafficCourt-demo
    environment:
      
    ports:
      - 3001:8080

#############################################################################################
###                                  KEYCLOAK                                             ###
#############################################################################################  
  keycloak:
    image: quay.io/keycloak/keycloak
    environment:
      DB_VENDOR: H2
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      KEYCLOAK_FRONTEND_URL: http://localhost:8081/auth
    volumes:
      - ./infrastructure/keycloak/realm-export.json:/tmp/realm-export.json
    ports:
      - 8081:8080
    networks:
      - fisu-net

#############################################################################################
###                                  KEYCLOAK CONFIG                                      ###
#############################################################################################  
  keycloak-config:
    build:
      context: ./infrastructure/keycloak
      args:
        - KEYCLOAK_URL=http://keycloak:8080
    command: sh -c "dockerize -wait http://keycloak:8080 -timeout 300s -wait-retry-interval 10s /tmp/createuser.sh"
    networks:
      - fisu-net

#############################################################################################
###                                  SPLUNK                                               ###
#############################################################################################  
  splunk:
    image: ${SPLUNK_IMAGE:-splunk/splunk:latest}
    container_name: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_HEC_TOKEN=${SPLUNK_HEC_TOKEN}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
    ports:
      - 8000:8000
      - 8088:8088
