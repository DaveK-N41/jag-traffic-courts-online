version: "3.8"

services:
  # #############################################################################################
  # ###                                 TrafficCourt BACKEND                                  ###
  # #############################################################################################

  # ---------------------------------------------------------------------------------------------
  # Citizen API
  # ---------------------------------------------------------------------------------------------
  citizen-api:
    container_name: citizen-api
    build:
      context: ./src/backend/TrafficCourts
      dockerfile: ./Citizen.Service/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ASPNETCORE_URLS: http://*:8080
      FORMRECOGNIZER__APIKEY: ${FORMRECOGNIZER__APIKEY:-}
      FORMRECOGNIZER__ENDPOINT: ${FORMRECOGNIZER__ENDPOINT:-}
      MASSTRANSIT__TRANSPORT: ${MASSTRANSIT__TRANSPORT:-InMemory}
      RABBITMQ__HOST: rabbitmq
      RABBITMQ__PORT: 5672
      RABBITMQ__USERNAME: ${RABBITMQ__USERNAME}
      RABBITMQ__PASSWORD: ${RABBITMQ__PASSWORD}
      TICKETSEARCHCLIENT__ADDRESS: ${TICKETSEARCHCLIENT__ADDRESS:-http://ticket-search:8080/}
    ports:
      - "5000:8080"
    restart: always
    depends_on: [rabbitmq, ticket-search, seq]
    volumes:
      # mount the current users usersecrets folder
      - "${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro"

  # ---------------------------------------------------------------------------------------------
  # Ticket Search API
  # ---------------------------------------------------------------------------------------------
  ticket-search:
    container_name: ticket-search
    build:
      context: ./src/backend/TrafficCourts
      dockerfile: ./TrafficCourts.Ticket.Search.Service/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ASPNETCORE_URLS: http://*:8080
      TICKETSEARCH__SEARCHTYPE: ${TICKETSEARCH__SEARCHTYPE:-Mock}
    ports:
      - "5100:8080"
      - "5110:8088"
    restart: always
    #depends_on: [splunk]
    volumes:
      # mount the current users usersecrets folder
      - "${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro"

  # #############################################################################################
  # ###                                 TrafficCourt FRONTEND                                 ###
  # #############################################################################################
  citizen-portal:
    container_name: citizen-portal
    build:
      context: ./src/frontend/citizen-portal
      args:
        - API_BASE_PATH=${API_BASE_PATH:-http://citizen-api:8080/api/}
    restart: always
    ports:
      - "8080:8080"
    ## following is used for testing nginx.conf locally. No need to build the citizen-portal every
    ## time we change the nginx.conf, start a shell in the container and run 'service nginx reload' or '/etc/init.d/nginx reload'
    #volumes:
    #  - ./src/frontend/citizen-portal/nginx.conf:/opt/app-root/etc/nginx.default.d/default.conf
    depends_on: [citizen-api]

  #############################################################################################
  ###                           RABBITMQ                                                    ###
  #############################################################################################
  rabbitmq:
    image: rabbitmq:3.9.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - data-rabbit:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    restart: always

  #############################################################################################
  ###                           Seq                                                         ###
  #############################################################################################
  seq:
    image: datalust/seq:latest
    ports:
      - 5341:80
    environment:
      ACCEPT_EULA: Y
    restart: unless-stopped

  #############################################################################################
  ###                           Azure Form Recognizer (3 containers)                        ###
  #############################################################################################
  
  form-rec-nginx:
    image: nginx:alpine
    container_name: azure-cognitive-service-proxy
    volumes:
      - ./tools/form-recognizer/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "5200:5200"

  form-rec-layout:
    container_name: azure-cognitive-service-layout
    image: mcr.microsoft.com/azure-cognitive-services/form-recognizer/layout
    depends_on:
      - rabbitmq
    environment:
      eula: accept
      apikey: ${FORMRECOGNIZER__APIKEY}
      billing: ${FORMRECOGNIZER__ENDPOINT}
      Queue:RabbitMQ:HostName: ${RABBITMQ__HOST}
      Queue:RabbitMQ:Port: ${RABBITMQ__PORT}
      Logging:Console:LogLevel:Default: Information
      SharedRootFolder: /shared
      Mounts:Shared: /shared
      Mounts:Output: /logs
    volumes:
      - type: bind
        source: ./tools/form-recognizer/shared
        target: /shared
      - type: bind
        source: ./tools/form-recognizer/logs
        target: /logs
    expose:
      - "5000"

  form-rec-custom-api:
    container_name: azure-cognitive-service-custom-api
    image: mcr.microsoft.com/azure-cognitive-services/form-recognizer/custom-api
    restart: always
    depends_on:
      - rabbitmq
    environment:
      eula: accept
      apikey: ${FORMRECOGNIZER__APIKEY}
      billing: ${FORMRECOGNIZER__ENDPOINT}
      Logging:Console:LogLevel:Default: Information
      Queue:RabbitMQ:HostName: ${RABBITMQ__HOST}
      Queue:RabbitMQ:Port: ${RABBITMQ__PORT}
      SharedRootFolder: /shared
      Mounts:Shared: /shared
      Mounts:Output: /logs
    volumes:
      - type: bind
        source: ./tools/form-recognizer/shared
        target: /shared
      - type: bind
        source: ./tools/form-recognizer/logs
        target: /logs
    expose:
      - "5000"

  form-rec-custom-supervised:
    container_name: azure-cognitive-service-custom-supervised
    image: mcr.microsoft.com/azure-cognitive-services/form-recognizer/custom-supervised
    restart: always
    depends_on:
      - rabbitmq
    environment:
      eula: accept
      apikey: ${FORMRECOGNIZER__APIKEY}
      billing: ${FORMRECOGNIZER__ENDPOINT}
      CustomFormRecognizer:ContainerPhase: All
      CustomFormRecognizer:LayoutAnalyzeUri: http://azure-cognitive-service-layout:5000/formrecognizer/v2.1/layout/analyze
      Logging:Console:LogLevel:Default: Information
      Queue:RabbitMQ:HostName: ${RABBITMQ__HOST}
      Queue:RabbitMQ:Port: ${RABBITMQ__PORT}
      SharedRootFolder: /shared
      Mounts:Shared: /shared
      Mounts:Output: /logs
    volumes:
      - type: bind
        source: ./tools/form-recognizer/shared
        target: /shared
      - type: bind
        source: ./tools/form-recognizer/logs
        target: /logs
  
volumes:
  data-rabbit:
  data-redis:
